#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES

#include <iostream>
#include <bits/stdc++.h>
#include <sstream>
#include <cstdint>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <math.h>
#include <algorithm>
#include <string>
#include <numeric>
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define NITRO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
//#define mod 1000000007
#define ll long long
#define workWithFiles freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout)
const long double pi = 3.14159265359;
#define debug1(a) cout<<#a<<" = "<<(a)<<endl;
#define debug2(a,b) cout<<#a<<" = "<<(a)<<", "<<#b<<" = "<<(b)<<endl;
#define debug3(a,b,c) cout<<#a<<" = "<<(a)<<", "<<#b<<" = "<<(b)<<", "<<#c<<" = "<<(c)<<endl;
#define debug4(a,b,c,d) cout<<#a<<" = "<<(a)<<", "<<#b<<" = "<<(b)<<", "<<#c<<" = "<<(c)<<", "<<#d<<" = "<<(d)<<endl;
#define debug5(a,b,c,d,e) cout<<#a<<" = "<<(a)<<", "<<#b<<" = "<<(b)<<", "<<#c<<" = "<<(c)<<", "<<#d<<" = "<<(d)<<", "<<#e<<" = "<<(e)<<endl;
#include <nmmintrin.h>



#include <iostream>
#include <bits/stdc++.h>

using namespace std;





int32_t main()
{
    int n;
    cin>>n;
    vector<vector<int>> price(n, vector<int>(3));
    for(int i = 0; i<n; i++){
        cin>>price[i][0];
        cin>>price[i][1];
        cin>>price[i][2];
    }
    vector<vector<int>> dp1(n, vector<int>(3, INT_MAX));
    dp1[0][0] = price[0][0];
    dp1[0][1] = -1;
    dp1[0][2] = -1;
    for(int i = 1; i<n; i++){
        for(int c = 0; c<3; c++){
            int cPrev1 = (c+1)%3;
            int cPrev2 = (c+2)%3;
            if(dp1[i-1][cPrev1] != -1){
                dp1[i][c] = min(dp1[i][c], dp1[i-1][cPrev1] + price[i][c]);
            }
            if(dp1[i-1][cPrev2] != -1){
                dp1[i][c] = min(dp1[i][c], dp1[i-1][cPrev2] + price[i][c]);
            }
            if(dp1[i][c] == INT_MAX) {
                dp1[i][c] = -1;
            }
        }
    }
    int firstRes = min(dp1[n-1][1], dp1[n-1][2]);


    vector<vector<int>> dp2(n, vector<int>(3, INT_MAX));
    dp2[0][0] = -1;
    dp2[0][1] = price[0][1];
    dp2[0][2] = -1;
    for(int i = 1; i<n; i++){
        for(int c = 0; c<3; c++){
            int cPrev1 = (c+1)%3;
            int cPrev2 = (c+2)%3;
            if(dp2[i-1][cPrev1] != -1){
                dp2[i][c] = min(dp2[i][c], dp2[i-1][cPrev1] + price[i][c]);
            }
            if(dp2[i-1][cPrev2] != -1){
                dp2[i][c] = min(dp2[i][c], dp2[i-1][cPrev2] + price[i][c]);
            }
            if(dp2[i][c] == INT_MAX) {
                dp2[i][c] = -1;
            }
        }
    }
    int secondRes = min(dp2[n-1][0], dp2[n-1][2]);

    vector<vector<int>> dp3(n, vector<int>(3, INT_MAX));
    dp3[0][0] = -1;
    dp3[0][1] = -1;
    dp3[0][2] = price[0][2];
    for(int i = 1; i<n; i++){
        for(int c = 0; c<3; c++){
            int cPrev1 = (c+1)%3;
            int cPrev2 = (c+2)%3;
            if(dp3[i-1][cPrev1] != -1){
                dp3[i][c] = min(dp3[i][c], dp3[i-1][cPrev1] + price[i][c]);
            }
            if(dp3[i-1][cPrev2] != -1){
                dp3[i][c] = min(dp3[i][c], dp3[i-1][cPrev2] + price[i][c]);
            }
            if(dp3[i][c] == INT_MAX) {
                dp3[i][c] = -1;
            }
        }
    }
    int thirdRes = min(dp3[n-1][0], dp3[n-1][1]);
    cout<<min({firstRes, secondRes, thirdRes})<<endl;
}


//https://mendo.mk/Task.do?id=128
